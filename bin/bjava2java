#!/usr/bin/env python3
"""
Translate BetterJava to Java
"""

import sys
from betterjava.translator import translate_to_java
from betterjava.parser import parse_bjava
from betterjava.logger import setup_logger
from betterjava.exceptions import BetterJavaSyntaxError, BetterJavaTranslationError

logger = setup_logger("bjava2java", "bjava2java.log")

def main():
    if len(sys.argv) != 3:
        print("Usage: bjava2java <input_file.bjava> <output_file.java>")
        logger.error("Incorrect number of arguments provided.")
        sys.exit(1)

    input_file, output_file = sys.argv[1], sys.argv[2]

    try:
        logger.info(f"Reading input file: {input_file}")
        with open(input_file, "r") as infile:
            bjava_code = infile.read()

        logger.info("Validating BetterJava syntax.")
        parse_bjava(bjava_code)

        logger.info("Translating BetterJava to Java.")
        java_code = translate_to_java(bjava_code)

        logger.info(f"Writing output file: {output_file}")
        with open(output_file, "w") as outfile:
            outfile.write(java_code)

        print(f"Successfully translated {input_file} to {output_file}")
        logger.info(f"Successfully translated {input_file} to {output_file}")

    except BetterJavaSyntaxError as e:
        logger.error(f"Syntax Error: {e}")
        print(f"Syntax Error: {e}")
        sys.exit(1)
    except BetterJavaTranslationError as e:
        logger.error(f"Translation Error: {e}")
        print(f"Translation Error: {e}")
        sys.exit(1)
    except Exception as e:
        logger.error(f"Unexpected Error: {e}")
        print(f"Unexpected Error: {e}")
        sys.exit(1)

if __name__ == "__main__":
    main()